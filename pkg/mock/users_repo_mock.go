// Code generated by MockGen. DO NOT EDIT.
// Source: repo.go

// Package mock is a generated GoMock package.
package mock

import (
	users "billing_system_test_task/pkg/users"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSQLRepository is a mock of SQLRepository interface
type MockSQLRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSQLRepositoryMockRecorder
}

// MockSQLRepositoryMockRecorder is the mock recorder for MockSQLRepository
type MockSQLRepositoryMockRecorder struct {
	mock *MockSQLRepository
}

// NewMockSQLRepository creates a new mock instance
func NewMockSQLRepository(ctrl *gomock.Controller) *MockSQLRepository {
	mock := &MockSQLRepository{ctrl: ctrl}
	mock.recorder = &MockSQLRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSQLRepository) EXPECT() *MockSQLRepositoryMockRecorder {
	return m.recorder
}

// GetByID mocks base method
func (m *MockSQLRepository) GetByID(ctx context.Context, userID int) (*users.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, userID)
	ret0, _ := ret[0].(*users.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID
func (mr *MockSQLRepositoryMockRecorder) GetByID(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockSQLRepository)(nil).GetByID), ctx, userID)
}

// GetByWalletID mocks base method
func (m *MockSQLRepository) GetByWalletID(ctx context.Context, walletID int) (*users.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByWalletID", ctx, walletID)
	ret0, _ := ret[0].(*users.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByWalletID indicates an expected call of GetByWalletID
func (mr *MockSQLRepositoryMockRecorder) GetByWalletID(ctx, walletID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByWalletID", reflect.TypeOf((*MockSQLRepository)(nil).GetByWalletID), ctx, walletID)
}

// Create mocks base method
func (m *MockSQLRepository) Create(ctx context.Context, email string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, email)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockSQLRepositoryMockRecorder) Create(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSQLRepository)(nil).Create), ctx, email)
}
