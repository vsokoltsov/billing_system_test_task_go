// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/operations/repo.go

// Package operations is a generated GoMock package.
package operations

import (
	context "context"
	sql "database/sql"
	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
	reflect "reflect"
)

// MockIWalletOperationRepo is a mock of IWalletOperationRepo interface
type MockIWalletOperationRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletOperationRepoMockRecorder
}

// MockIWalletOperationRepoMockRecorder is the mock recorder for MockIWalletOperationRepo
type MockIWalletOperationRepoMockRecorder struct {
	mock *MockIWalletOperationRepo
}

// NewMockIWalletOperationRepo creates a new mock instance
func NewMockIWalletOperationRepo(ctrl *gomock.Controller) *MockIWalletOperationRepo {
	mock := &MockIWalletOperationRepo{ctrl: ctrl}
	mock.recorder = &MockIWalletOperationRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIWalletOperationRepo) EXPECT() *MockIWalletOperationRepoMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockIWalletOperationRepo) Create(ctx context.Context, tx *sql.Tx, operation string, walletFrom, walletTo int, amount decimal.Decimal) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, tx, operation, walletFrom, walletTo, amount)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockIWalletOperationRepoMockRecorder) Create(ctx, tx, operation, walletFrom, walletTo, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIWalletOperationRepo)(nil).Create), ctx, tx, operation, walletFrom, walletTo, amount)
}

// List mocks base method
func (m *MockIWalletOperationRepo) List(ctx context.Context, params *ListParams) (*sql.Rows, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx, params)
	ret0, _ := ret[0].(*sql.Rows)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockIWalletOperationRepoMockRecorder) List(ctx, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockIWalletOperationRepo)(nil).List), ctx, params)
}
