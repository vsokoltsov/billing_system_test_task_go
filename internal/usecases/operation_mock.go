// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/usecases/operation.go

// Package usecases is a generated GoMock package.
package usecases

import (
	adapters "billing_system_test_task/internal/adapters"
	entities "billing_system_test_task/internal/entities"
	context "context"
	gomock "github.com/golang/mock/gomock"
	url "net/url"
	reflect "reflect"
)

// MockWalletOperationUsecase is a mock of WalletOperationUsecase interface
type MockWalletOperationUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockWalletOperationUsecaseMockRecorder
}

// MockWalletOperationUsecaseMockRecorder is the mock recorder for MockWalletOperationUsecase
type MockWalletOperationUsecaseMockRecorder struct {
	mock *MockWalletOperationUsecase
}

// NewMockWalletOperationUsecase creates a new mock instance
func NewMockWalletOperationUsecase(ctrl *gomock.Controller) *MockWalletOperationUsecase {
	mock := &MockWalletOperationUsecase{ctrl: ctrl}
	mock.recorder = &MockWalletOperationUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWalletOperationUsecase) EXPECT() *MockWalletOperationUsecaseMockRecorder {
	return m.recorder
}

// GenerateReport mocks base method
func (m *MockWalletOperationUsecase) GenerateReport(ctx context.Context, queryParams url.Values) (*entities.FileMetadata, adapters.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateReport", ctx, queryParams)
	ret0, _ := ret[0].(*entities.FileMetadata)
	ret1, _ := ret[1].(adapters.Error)
	return ret0, ret1
}

// GenerateReport indicates an expected call of GenerateReport
func (mr *MockWalletOperationUsecaseMockRecorder) GenerateReport(ctx, queryParams interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateReport", reflect.TypeOf((*MockWalletOperationUsecase)(nil).GenerateReport), ctx, queryParams)
}
