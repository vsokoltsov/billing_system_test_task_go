version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: app
    ports:
      - 8000:8000
    depends_on:
      - postgres
    volumes:
      - ./:/app
    env_file: .env
    depends_on: 
      - postgres
    # networks:
    #   - dev

  postgres:
    image: postgres
    container_name: billing_db
    env_file: .env
    ports:
      - 5432:5432
    volumes:
      - go_volume:/var/lib/postgresql
      - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    # networks:
    #   - dev

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file: .env
    ports:
      - "5050:80"
    depends_on:
      - postgres
    # networks:
    #   - dev

  prom:
    container_name: prometheus
    image: prom/prometheus:v2.21.0
    ports:
      - 9090:9090
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
      # - ./prom/rules.yml:/etc/prometheus/rules.yml

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  go_volume: {}
  prometheus_data:  {}

networks:
  dev:
    name: dev
  test:
    name: test